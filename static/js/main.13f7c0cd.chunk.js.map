{"version":3,"sources":["data/artists.js","pages/artists/artist/index.js","pages/artists/index.js","App.js","reportWebVitals.js","index.js"],"names":["artistsData","name","bio","picture","releases","title","description","images","ArtistPage","map","release","image","getArtistPath","paramCase","ArtistsPage","dataItem","to","path","Home","About","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAaA,EAAc,CACzB,CACEC,KAAM,eACNC,IAAK,WACLC,QAAS,UACTC,SAAU,CACR,CACEC,MAAO,qBACPC,YAAa,mBACbC,OAAQ,CACN,YACA,eAMR,CACEN,KAAM,gBACNC,IAAK,iBACLC,QAAS,YACTC,SAAU,CACR,CACEC,MAAO,wBACPC,YAAa,mBACbC,OAAQ,CACN,YACA,gBCGKC,EA5BI,SAAC,GAKb,IAJLP,EAII,EAJJA,KACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,QACAC,EACI,EADJA,SAEA,OACE,gCACE,6BAAKH,IAEL,4BAAIC,IACJ,4BAAIC,IAEHC,EAASK,KAAI,SAACC,GAAD,OACZ,qCACE,4BAAIA,EAAQL,QACZ,4BAAIK,EAAQJ,cACXI,EAAQH,OAAOE,KAAI,SAACE,GAAD,OAClB,4BACGA,iB,QCVTC,EAAgB,SAACX,GAAD,OAAUA,GAAI,mBAAgBY,YAAUZ,KAoC/Ca,EAlCK,WAClB,OACE,cAAC,IAAD,UACE,gCACE,yCACA,8BACE,6BACGd,EAAYS,KAAI,SAACM,GAAD,OACf,6BACE,cAAC,IAAD,CAAMC,GAAIJ,EAAcG,EAASd,MAAjC,SACGc,EAASd,gBAOpB,cAAC,IAAD,UACGD,EAAYS,KAAI,SAACM,GAAD,OACf,cAAC,IAAD,CAAOE,KAAML,EAAcG,EAASd,MAApC,SACE,cAAC,EAAD,CACEA,KAAMc,EAASd,KACfC,IAAKa,EAASb,IACdC,QAASY,EAASZ,QAClBC,SAAUW,EAASX,wBCMnC,SAASc,IACP,OAAO,sCAGT,SAASC,IACP,OAAO,uCAGMC,MA1CH,WACV,OACE,cAAC,IAAD,UACE,gCACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMJ,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,WAAT,4BAKN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAACE,EAAD,MAEF,cAAC,IAAD,CAAOF,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAACC,EAAD,eCvBGG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.13f7c0cd.chunk.js","sourcesContent":["export const artistsData = [\n  {\n    name: 'First artist',\n    bio: 'some bio',\n    picture: 'pic.png',\n    releases: [\n      {\n        title: 'some release title',\n        description: 'some description',\n        images: [\n          'front.png',\n          'back.png',\n        ]\n      },\n    ],\n  },\n  \n  {\n    name: 'Second artist',\n    bio: 'some other bio',\n    picture: 'pic22.png',\n    releases: [\n      {\n        title: 'another release title',\n        description: 'some description',\n        images: [\n          'front.png',\n          'back.png',\n        ]\n      },\n    ],\n  },\n]","import React from 'react'\n\nconst ArtistPage = ({\n  name,\n  bio,\n  picture,\n  releases,\n}) => {\n  return (\n    <div>\n      <h2>{name}</h2>\n      \n      <p>{bio}</p>\n      <p>{picture}</p>\n      \n      {releases.map((release) => (\n        <>\n          <p>{release.title}</p>\n          <p>{release.description}</p>\n          {release.images.map((image) => (\n            <p>\n              {image}\n            </p>\n          ))}\n        </>\n      ))}\n    </div>\n  );\n}\n\nexport default ArtistPage","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { artistsData } from '../../data/artists';\nimport ArtistPage from './artist';\nimport { paramCase } from 'change-case';\n\nconst getArtistPath = (name) => name && `/artists/${paramCase(name)}`\n\nconst ArtistsPage = () => {\n  return (\n    <Router>\n      <div>\n        <h1>Artists</h1>\n        <nav>\n          <ul>\n            {artistsData.map((dataItem) => (\n              <li>\n                <Link to={getArtistPath(dataItem.name)}>\n                  {dataItem.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n\n        <Switch>\n          {artistsData.map((dataItem) => (\n            <Route path={getArtistPath(dataItem.name)}>\n              <ArtistPage\n                name={dataItem.name}\n                bio={dataItem.bio}\n                picture={dataItem.picture}\n                releases={dataItem.releases}\n              />\n            </Route>\n          ))}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default ArtistsPage","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport ArtistsPage from \"./pages/artists\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/artists\">Artists</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/artists\">\n            <ArtistsPage />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}