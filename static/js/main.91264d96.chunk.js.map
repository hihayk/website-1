{"version":3,"sources":["content/artists.js","utilities.js","pages/artists/index.js","pages/artists/artist/index.js","pages/releases/index.js","pages/releases/release/index.js","App.js","reportWebVitals.js","index.js"],"names":["artistsContent","name","bio","picture","releases","title","description","images","getArtistPath","paramCase","getReleasePath","ArtistsPage","map","dataItem","to","ArtistPage","release","index","style","border","image","getReleasesContent","result","forEach","content","obj","push","Object","assign","author","ReleasesPage","ReleasePage","Home","About","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91264d96.chunk.js","sourcesContent":["export const artistsContent = [\n  {\n    name: 'First artist',\n    bio: 'some bio',\n    picture: 'pic.png',\n    releases: [\n      {\n        title: 'first release',\n        description: 'some description',\n        images: [\n          'red.png',\n          'blue.png',\n        ]\n      },\n      {\n        title: 'second release',\n        description: 'some description',\n        images: [\n          'green.png',\n          'yellow.png',\n        ]\n      },\n    ],\n  },\n  \n  {\n    name: 'Second artist',\n    bio: 'some other bio',\n    picture: 'pic22.png',\n    releases: [\n      {\n        title: 'another release title',\n        description: 'some description',\n        images: [\n          'front.png',\n          'back.png',\n        ]\n      },\n    ],\n  },\n]","import { paramCase } from 'change-case';\n\nexport const getArtistPath = (name) => name && `/artists/${paramCase(name)}`\n\nexport const getReleasePath = (title) => title && `/releases/${paramCase(title)}`\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { artistsContent } from '../../content/artists';\nimport { getArtistPath } from '../../utilities';\n\nconst ArtistsPage = () => {\n  return (\n    <div>\n      <h1>Artists</h1>\n      <nav>\n        <ul>\n          {artistsContent.map((dataItem) => (\n            <li>\n              <Link to={getArtistPath(dataItem.name)}>\n                {dataItem.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default ArtistsPage","import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { getReleasePath } from '../../../utilities';\n\nconst ArtistPage = ({\n  name,\n  bio,\n  picture,\n  releases,\n}) => {\n  return (\n    <div>\n      <h2>{name}</h2>\n      \n      <p>{bio}</p>\n      <p>{picture}</p>\n      \n      {releases.map((release, index) => (\n        <div key={index} style={{border: '1px solid grey'}}>\n          <Link to={getReleasePath(release.title)}>{release.title}</Link>\n          <p>{release.title}</p>\n          <p>{release.description}</p>\n          {release.images.map((image) => (\n            <p>\n              {image}\n            </p>\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ArtistPage","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { artistsContent } from '../../content/artists';\nimport { getReleasePath } from '../../utilities'\n\nconst getReleasesContent = () => {\n  let result = []\n\n  artistsContent.forEach((content, index) => {\n    content.releases.forEach(obj => {\n      result.push(\n        Object.assign(obj, {author: artistsContent[index].name})\n      );\n    })\n  });\n  \n  return result\n}\n\nconst ReleasesPage = () => {\n  return (\n    <div>\n      <nav>\n        <ul>\n          {getReleasesContent().map((content, index) => (\n            <li key={index}>\n              <Link to={getReleasePath(content.title)}>\n                {content.title}\n                <br />\n                {content.author}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default ReleasesPage","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { getArtistPath } from '../../../utilities';\n\nconst ReleasePage = ({\n  author,\n  title,\n  images,\n}) => {\n  return (\n    <div>\n      <h2>title {title}</h2>\n      \n      <Link to={getArtistPath(author)}>{author}</Link>\n      \n      {images && images.map((image, index) => (\n        <div key={index} style={{border: '1px solid grey'}}>\n          {image}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default ReleasePage","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { artistsContent } from \"./content/artists\";\nimport ArtistsPage from \"./pages/artists\";\nimport ArtistPage from \"./pages/artists/artist\";\nimport ReleasesPage from \"./pages/releases\";\nimport ReleasePage from \"./pages/releases/release\";\nimport { getArtistPath, getReleasePath } from \"./utilities\";\n\nconst getReleasesContent = () => {\n  let result = []\n\n  artistsContent.forEach((content, index) => {\n    content.releases.forEach(obj => {\n      result.push(\n        Object.assign(obj, {author: artistsContent[index].name})\n      );\n    })\n  });\n  \n  return result\n}\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/artists\">Artists</Link>\n            </li>\n            <li>\n              <Link to=\"/releases\">Releases</Link>\n            </li>\n          </ul>\n        </nav>\n\n        <Switch>\n          {artistsContent.map((dataItem) => (\n            <Route path={getArtistPath(dataItem.name)}>\n              <ArtistPage\n                name={dataItem.name}\n                bio={dataItem.bio}\n                picture={dataItem.picture}\n                releases={dataItem.releases}\n              />\n            </Route>\n          ))}\n          {getReleasesContent().map((content) => (\n            <Route path={getReleasePath(content.title)}>\n              <ReleasePage\n                author={content.author}\n                title={content.title}\n                images={content.images}\n              />\n            </Route>\n          ))}\n          <Route path=\"/releases\">\n            <ReleasesPage />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/artists\">\n            <ArtistsPage />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}